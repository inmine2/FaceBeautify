# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow,QFileDialog,QMessageBox
import sys
from PyQt5.Qt import QThread,QMutex,pyqtSignal,QPixmap
from FaceBeautify import face_beautify
from time import sleep
from re import findall
from os import startfile


class Thread_1(QThread):  # 线程1
    _signal =pyqtSignal()
    def __init__(self):
        super().__init__()
        self.imglist = []
        self.whitening = 50
        self.smoothing=50
        self.thinface=50
        self.shrink_face=50
        self.enlarge_eye=50
        self.remove_eyebrow=50
        self.filter_type='无滤镜'
        self.wrongfile=""
    def run(self):
        #qmut_1.lock() # 加锁
        for img in self.imglist:
            try:
                newFace = face_beautify(img,self.whitening ,self.smoothing,self.thinface,self.shrink_face,
                          self.enlarge_eye,self.remove_eyebrow,self.filter_type)
                sleep(1)
            except:
                self.wrongfile=self.wrongfile+"\n"+img
        #qmut_1.unlock() # 解锁

        self._signal.emit()

class Ui_MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.retranslateUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 850)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 850))
        MainWindow.setMaximumSize(QtCore.QSize(800, 850))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setGeometry(QtCore.QRect(280, 30, 192, 55))
        self.title.setObjectName("title")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(130, 102, 361, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label_1 = QtWidgets.QLabel(self.centralwidget)
        self.label_1.setGeometry(QtCore.QRect(100, 170, 48, 27))
        self.label_1.setObjectName("label_1")
        self.verticalSlider_1 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_1.setGeometry(QtCore.QRect(110, 210, 19, 160))
        self.verticalSlider_1.setMaximum(100)
        self.verticalSlider_1.setProperty("value", 50)
        self.verticalSlider_1.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_1.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.verticalSlider_1.setObjectName("verticalSlider_1")
        self.verticalSlider_2 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_2.setGeometry(QtCore.QRect(220, 210, 19, 160))
        self.verticalSlider_2.setMaximum(100)
        self.verticalSlider_2.setProperty("value", 50)
        self.verticalSlider_2.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_2.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.verticalSlider_2.setObjectName("verticalSlider_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(210, 170, 48, 27))
        self.label_2.setObjectName("label_2")
        self.verticalSlider_3 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_3.setGeometry(QtCore.QRect(330, 210, 19, 160))
        self.verticalSlider_3.setMaximum(100)
        self.verticalSlider_3.setProperty("value", 50)
        self.verticalSlider_3.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_3.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.verticalSlider_3.setObjectName("verticalSlider_3")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(320, 170, 48, 27))
        self.label_3.setObjectName("label_3")
        self.verticalSlider_4 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_4.setGeometry(QtCore.QRect(440, 210, 19, 160))
        self.verticalSlider_4.setMaximum(100)
        self.verticalSlider_4.setProperty("value", 50)
        self.verticalSlider_4.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_4.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.verticalSlider_4.setObjectName("verticalSlider_4")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(430, 170, 48, 27))
        self.label_4.setObjectName("label_4")
        self.verticalSlider_5 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_5.setGeometry(QtCore.QRect(550, 210, 19, 160))
        self.verticalSlider_5.setMaximum(100)
        self.verticalSlider_5.setProperty("value", 50)
        self.verticalSlider_5.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_5.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.verticalSlider_5.setObjectName("verticalSlider_5")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(540, 170, 48, 27))
        self.label_5.setObjectName("label_5")
        self.verticalSlider_6 = QtWidgets.QSlider(self.centralwidget)
        self.verticalSlider_6.setGeometry(QtCore.QRect(660, 210, 19, 160))
        self.verticalSlider_6.setMaximum(100)
        self.verticalSlider_6.setProperty("value", 50)
        self.verticalSlider_6.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_6.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.verticalSlider_6.setObjectName("verticalSlider_6")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(650, 170, 48, 27))
        self.label_6.setObjectName("label_6")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(90, 390, 54, 12))
        self.label_11.setMidLineWidth(0)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.label_22 = QtWidgets.QLabel(self.centralwidget)
        self.label_22.setGeometry(QtCore.QRect(200, 390, 54, 12))
        self.label_22.setAlignment(QtCore.Qt.AlignCenter)
        self.label_22.setObjectName("label_22")
        self.label_33 = QtWidgets.QLabel(self.centralwidget)
        self.label_33.setGeometry(QtCore.QRect(310, 390, 54, 12))
        self.label_33.setAlignment(QtCore.Qt.AlignCenter)
        self.label_33.setObjectName("label_33")
        self.label_44 = QtWidgets.QLabel(self.centralwidget)
        self.label_44.setGeometry(QtCore.QRect(420, 390, 54, 12))
        self.label_44.setAlignment(QtCore.Qt.AlignCenter)
        self.label_44.setObjectName("label_44")
        self.label_55 = QtWidgets.QLabel(self.centralwidget)
        self.label_55.setGeometry(QtCore.QRect(530, 390, 54, 12))
        self.label_55.setAlignment(QtCore.Qt.AlignCenter)
        self.label_55.setObjectName("label_55")
        self.label_66 = QtWidgets.QLabel(self.centralwidget)
        self.label_66.setGeometry(QtCore.QRect(640, 390, 54, 12))
        self.label_66.setAlignment(QtCore.Qt.AlignCenter)
        self.label_66.setObjectName("label_66")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(550, 100, 48, 27))
        self.label_7.setObjectName("label_7")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(620, 100, 81, 31))
        self.comboBox.setObjectName("comboBox")
        self.piclable = QtWidgets.QLabel(self.centralwidget)
        self.piclable.setGeometry(QtCore.QRect(80, 450, 301, 241))
        self.piclable.setObjectName("piclable")
        self.piclable.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.piclable_2 = QtWidgets.QLabel(self.centralwidget)
        self.piclable_2.setGeometry(QtCore.QRect(420, 450, 301, 241))
        self.piclable_2.setObjectName("iclable_2")
        self.piclable_2.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.Button_yuantu = QtWidgets.QPushButton(self.centralwidget)
        self.Button_yuantu.setGeometry(QtCore.QRect(100, 710, 100, 27))
        self.Button_yuantu.setObjectName("Button_yuantu")
        self.Button_yuantu.setFont(font)
        self.label_meihua = QtWidgets.QLabel(self.centralwidget)
        self.label_meihua.setGeometry(QtCore.QRect(540, 710, 48, 27))
        self.label_meihua.setObjectName("label_meihua")
        self.Button_Next = QtWidgets.QPushButton(self.centralwidget)
        self.Button_Next.setGeometry(QtCore.QRect(240, 710, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Button_Next.setFont(font)
        self.Button_Next.setObjectName("Button_Next")
        self.Button_prev = QtWidgets.QPushButton(self.centralwidget)
        self.Button_prev.setGeometry(QtCore.QRect(100, 710, 111, 31))
        self.Button_prev.setFont(font)
        self.Button_prev.setObjectName("Button_Next")
        self.Button_prev.setText("上一张")
        self.Button_openFile =  QtWidgets.QPushButton(self.centralwidget)
        self.Button_openFile.setGeometry(600, 710, 111, 31)
        self.Button_openFile.setFont(font)
        self.Button_openFile.setObjectName("Button_openFile")
        self.Button_openFile.setText("打开图片")
        self.Button_One = QtWidgets.QPushButton(self.centralwidget)
        self.Button_One.setGeometry(QtCore.QRect(120, 750, 191, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Button_One.setFont(font)
        self.Button_One.setObjectName("Button_One")
        self.Button_All = QtWidgets.QPushButton(self.centralwidget)
        self.Button_All.setGeometry(QtCore.QRect(470, 750, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Arabic")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.Button_All.setFont(font)
        self.Button_All.setObjectName("Button_All")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.i=0
        self.pathed = ""
        LvJingCh = ['无滤镜','黑白', '平静', '晴天', '旅程', '美肤', '王家卫', '唯美', '可人儿', '纽约', '樱花', '十七岁', '柔光灯', '下午茶', '亮肤', '卓别林',
                    '花香', '回忆', '冰美人', '巴黎', '时光', 'LOMO', '旧时光', '早春', '故事', '阿宝色', '补光灯', '暖暖', '绚烂', '薰衣草', '香奈儿',
                    '布拉格', '旧梦', '桃花', '粉黛', '江南']
        self.comboBox.addItems(LvJingCh)

        self.Button_All.clicked.connect(self.BeautifyAll)
        self.pushButton.clicked.connect(self.openfile)
        self.Button_Next.clicked.connect(self.nextImg)
        self.Button_prev.clicked.connect(self.preImg)
        self.Button_One.clicked.connect(self.BeautifyOne)
        self.Button_openFile.clicked.connect(self.openImg)

        self.retranslateUi(MainWindow)
        self.verticalSlider_1.valueChanged['int'].connect(self.label_11.setNum)
        self.verticalSlider_2.valueChanged['int'].connect(self.label_22.setNum)
        self.verticalSlider_3.valueChanged['int'].connect(self.label_33.setNum)
        self.verticalSlider_4.valueChanged['int'].connect(self.label_44.setNum)
        self.verticalSlider_5.valueChanged['int'].connect(self.label_55.setNum)
        self.verticalSlider_6.valueChanged['int'].connect(self.label_66.setNum)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def openfile(self):
        if self.pathed=="":
            self.temp = QFileDialog.getOpenFileNames(self, "打开图片")
        else:
            self.temp = QFileDialog.getOpenFileNames(self, "打开图片",self.pathed)
        print(self.temp)
        if self.temp[0]:
            self.files = self.temp[0]
            self.imageshowed = self.files[0]
            #self.Button_yuantu.click()
            self.showImg()
            self.pathed = findall('(.*)/',self.imageshowed)[0]
            print(self.pathed)

    def openImg(self):
        try:
            startfile(self.beautyImageShowed)
        except Exception as e:
            print(e)

    def BeautifyAll(self):
        if self.temp[0]:
            #face_beautify(file,self.label_11.text())
            self.thread_1 = Thread_1()  # 创建线程
            self.thread_1._signal.connect(self.printfini)         #链接结束函数
            self.thread_1.imglist = self.files
            self.thread_1.whitening = self.label_11.text()
            self.thread_1.smoothing = self.label_22.text()
            self.thread_1.thinface = self.label_33.text()
            self.thread_1.shrink_face = self.label_44.text()
            self.thread_1.enlarge_eye = self.label_55.text()
            self.thread_1.remove_eyebrow = self.label_66.text()
            self.thread_1.filter_type = self.comboBox.currentText()
            self.thread_1.start()  # 开始线程
            self.i = 0
            # self.msg = QMessageBox.information(self,"请等待",'正在美颜，请耐心等待',QMessageBox.Ok)
            # sleep(5)
            # self.msg.button(QMessageBox.Ok).animateClick()
            # self.msg.exec_()

            self.msg = QMessageBox()
            self.msg.setWindowTitle("请等待")  # QMessageBox标题
            self.msg.setText("正在批量美颜，请稍后")  # QMessageBox的提示文字
            self.msg.setStandardButtons(QMessageBox.Ok)  # QMessageBox显示的按钮
            self.msg.exec_()
        else:
            wrong2 = QMessageBox.information(self, "出错了", "未选择图片")

    def printfini(self):
        self.msg.button(QMessageBox.Ok).animateClick()  # t时间后自动关闭(t单位为毫秒)

        all = QMessageBox.information(self, "恭喜你", "完成\n其中失败的图片有：" + self.thread_1.wrongfile)
        self.showImg()

    def showImg(self):
        self.image = QPixmap(self.imageshowed)
        if self.image.width()>=self.image.height():
            h = int(self.image.height()*self.piclable.width()/self.image.width())
            self.image2=QPixmap(self.imageshowed).scaled(self.piclable.width(),h)
            print(self.image2.height())
        else:
            w = int(self.image.width()*self.piclable.height()/self.image.height())
            #self.image.scaled(w,self.piclable.height())
            self.image2 = QPixmap(self.imageshowed).scaled(w,self.piclable.height())
        self.piclable.setPixmap(self.image2)

        try:
            self.beautyImageShowed = self.imageshowed.split(".")[0]+"美颜.jpg"
            print(self.beautyImageShowed)
            self.Bimage = QPixmap(self.beautyImageShowed)
            if self.Bimage.width() >= self.Bimage.height():
                h = int(self.Bimage.height() * self.piclable_2.width() / self.Bimage.width())
                self.Bimage2 = QPixmap(self.beautyImageShowed).scaled(self.piclable_2.width(), h)
                print(self.Bimage2.height())
            else:
                w = int(self.Bimage.width() * self.piclable.height() / self.Bimage.height())
                self.Bimage.scaled(w, self.piclable_2.height())
                self.Bimage2 = QPixmap(self.beautyImageShowed).scaled(w, self.piclable_2.height())
            self.piclable_2.setPixmap(self.Bimage2)
        except Exception as e:
            self.piclable_2.clear()
            print(e)

    def BeautifyOne(self):
        face_beautify(self.imageshowed,self.label_11.text(),self.label_22.text(),self.label_33.text(),
                      self.label_44.text(),self.label_55.text(),self.label_66.text(),self.comboBox.currentText())
        one = QMessageBox.information(self,"恭喜你",'美颜完成')
        self.showImg()
    def nextImg(self):
        if self.i<len(self.files)-1:
            self.i+=1
            self.imageshowed = self.files[self.i]
            #self.Button_yuantu.click()
            self.showImg()
        else:
            msg = QMessageBox.information(self,"提示","已经是最后一张了！")

    def preImg(self):
        if self.i>0:
            self.i-=1
            self.imageshowed = self.files[self.i]
            #self.Button_yuantu.click()
            self.showImg()
        else:
            msg = QMessageBox.information(self,"提示","已经是第一张了！")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "批量美颜"))
        self.title.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:36pt;\">图片美颜</span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "打开图片"))
        self.label_1.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">美白</span></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">磨皮</span></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">瘦脸</span></p></body></html>"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">小脸</span></p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">大眼</span></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">去眉</span></p></body></html>"))
        self.label_11.setText(_translate("MainWindow", "50"))
        self.label_22.setText(_translate("MainWindow", "50"))
        self.label_33.setText(_translate("MainWindow", "50"))
        self.label_44.setText(_translate("MainWindow", "50"))
        self.label_55.setText(_translate("MainWindow", "50"))
        self.label_66.setText(_translate("MainWindow", "50"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">滤镜</span></p></body></html>"))
        self.Button_yuantu.setText(_translate("MainWindow", "显示第一张原图"))
        self.label_meihua.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">美颜</span></p></body></html>"))
        self.Button_Next.setText(_translate("MainWindow", "下一张"))
        self.Button_One.setText(_translate("MainWindow", "单张美颜"))
        self.Button_All.setText(_translate("MainWindow", "美化所有"))

if __name__ == '__main__':
    app = QApplication(sys.argv)
    MainWindow1 = QMainWindow()     #MainWindow1随便改
    ui = Ui_MainWindow()             #随便改
    ui.setupUi(MainWindow1)
    MainWindow1.show()
    sys.exit(app.exec_())